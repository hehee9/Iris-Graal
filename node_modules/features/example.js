/**
 * @file node_modules/features/example.js
 * @description 예시 기능 모듈 스켈레톤
 */

const _SCRIPT_NAME = "example.js";
const { Logger } = require("shared/logger");
const { parseCommand } = require("shared/utils");

/**
 * @description 메시지 핸들러
 * @param {import("shared/types").Message} msg
 * @returns {boolean|void} true를 반환하면 이후 핸들러가 중단됨
 */
function onMessage(msg) {
    try {
        const { cmd, args } = parseCommand(msg.content);
        if (!cmd) return;

        if (cmd === "따라하기") {
            msg.send(args.join(" "));
            return true; // 여기서 처리 끝
        }
    } catch (e) {
        Logger.e(_SCRIPT_NAME, e);
    }
}

/**
 * @description 피드 핸들러 예시: 강퇴 알림
 * @param {import("shared/types").Feed} feed
 */
function onKick(feed) {
    try {
        const kickerName = feed?.sender || null;
        const kickedName =
            feed?.msg?.member?.nickName ||
            feed?.json?.message?.member?.nickName ||
            null;

        if (!kickedName) return;
        feed.send(`${kickerName}님이 ${kickedName}님을 강퇴했습니다.`);
    } catch (e) {
        Logger.e(_SCRIPT_NAME, e);
    }
}

/** @description 기능 등록 엔트리 */
function register({ registerMessage, registerFeed }) {
    registerMessage(onMessage, 80); // 우선순위는 상황에 맞게 조정
    // 필요 시 피드도 등록
    // registerFeed(6, onKick, 100);
}

module.exports = { register };